{"version":3,"sources":["components/header/Header.js","pages/movieDetail/movie.js","redux/action.js","components/cards/cards.js","pages/movieListPage/popularMovieListPage.js","pages/movieListPage/topRatedMovieListPage.js","pages/movieListPage/upcomingMoviesListPage.js","pages/movieListPage/myFavouriteMovieList.js","pages/movieListPage/movieListPage.js","components/movieList/movieList.js","pages/home/home.js","App.js","redux/reducer.js","redux/saga.js","redux/store.js","index.js"],"names":["Header","className","to","src","alt","style","textDecoration","Movie","dispatch","useDispatch","favouriteMovies","useSelector","state","currentMovieDetail","useState","showHslPlayer","setShowHslPlayer","id","useParams","showFavourite","setShowFavourite","useEffect","type","payload","map","favMovie","backdrop_path","poster_path","original_title","tagline","vote_average","class","vote_count","runtime","release_date","genres","genre","name","console","log","onClick","overview","homepage","href","target","imdb_id","autoPlay","controls","width","production_companies","company","logo_path","Cards","movie","isLoading","setIsLoading","setTimeout","color","highlightColor","height","duration","window","location","origin","slice","PopularMovieListPage","popularMovies","TopRatedMovieListPage","topRatedMovies","UpcomingMovieListPage","upcomingMovies","MyFavouriteMovieListPage","MovieListPage","MovieList","props","Object","keys","movieList","setMovieList","fetch","then","response","json","data","results","toUpperCase","Home","popular","top_rated","upcoming","App","exact","path","initialState","reducer","action","filter","setFavouriteAsync","watchSetFavouriteMovie","removeFavouriteAsync","watchRemoveFavouriteMovie","setCurrentMovieDetailAsync","watchSetCurrentMovieDetailAsync","getPopularMoviesAsync","watchGetPopularMovies","getTopRatedMoviesAsync","watchGetTopRatedMovies","getUpComingMoviesAsync","watchGetUpComingMovies","rootSaga","put","takeLatest","res","all","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","logger","run","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2bcd3ced.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Header.css\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"headerLeft\">\r\n                <Link to=\"/TvMovie/\"><img className=\"header__icon\" src=\"https://www.seekpng.com/png/full/23-234252_tv-movie-logo-png-transparent-tv-and-movie.png\" alt=\"header icon\" /></Link>\r\n                <Link to=\"/TvMovie/movies/popular\" style={{textDecoration: \"none\"}}><span>Popular</span></Link>\r\n                <Link to=\"/TvMovie/movies/top_rated\" style={{textDecoration: \"none\"}}><span>Top rated</span></Link>\r\n                <Link to=\"/TvMovie/movies/upcoming\" style={{textDecoration: \"none\"}}><span>Upcoming</span></Link>\r\n            </div>\r\n            <div className=\"headerRight\">\r\n                <Link to=\"/TvMovie/movies/my-favourite\" style={{textDecoration: \"none\"}}><span>My Favourites </span></Link>\r\n                <Link to=\"/TvMovie/\"><span><i className=\"user__avatar fas fa-user-circle\"></i></span></Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, {useEffect, useState} from 'react'\r\nimport \"./movie.css\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport ReactHlsPlayer from \"react-hls-player\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { setFavourite, removeFavourite, setCurrentMovieDetail } from \"../../redux/action\"\r\n\r\nconst Movie = () => {\r\n    const dispatch = useDispatch()\r\n    const favouriteMovies = useSelector(state => state.favouriteMovies)\r\n    const currentMovieDetail = useSelector(state => state.currentMovieDetail)\r\n    const [showHslPlayer, setShowHslPlayer] = useState(false)\r\n    const { id } = useParams()  \r\n    const [ showFavourite, setShowFavourite] = useState(false)\r\n\r\n    useEffect(() => {\r\n        dispatch(setCurrentMovieDetail(id))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        favouriteMovies.map(favMovie => {\r\n            if(favMovie.id === currentMovieDetail.id){\r\n                setShowFavourite(true)\r\n                // return <span className=\"favourite\" onClick={() => dispatch(removeFavourite(currentMovieDetail))}>Favourite<i class=\"newTab favouriteOne fas fa-heart\"></i></span>\r\n            }\r\n        })\r\n    }, [favouriteMovies])\r\n\r\n    return (\r\n        <div className=\"movie\">\r\n            <div className=\"movie__intro\">\r\n                <img className=\"movie__backdrop\" src={`https://image.tmdb.org/t/p/original${currentMovieDetail ? currentMovieDetail.backdrop_path : \"\"}`} />\r\n            </div>\r\n            <div className=\"movie__detail\">\r\n                <div className=\"movie__detailLeft\">\r\n                    <div className=\"movie__posterBox\">\r\n                        <img className=\"movie__poster\" src={`https://image.tmdb.org/t/p/original${currentMovieDetail ? currentMovieDetail.poster_path : \"\"}`} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"movie__detailRight\">\r\n                    <div className=\"movie__detailRightTop\">\r\n                        <div className=\"movie__name\">{currentMovieDetail ? currentMovieDetail.original_title : \"\"}</div>\r\n                        <div className=\"movie__tagline\">{currentMovieDetail ? currentMovieDetail.tagline : \"\"}</div>\r\n                        <div className=\"movie__rating\">\r\n                            {currentMovieDetail ? currentMovieDetail.vote_average: \"\"} <i class=\"fas fa-star\" />\r\n                            <span className=\"movie__voteCount\">{currentMovieDetail ? \"(\" + currentMovieDetail.vote_count + \") votes\" : \"\"}</span>\r\n                        </div>  \r\n                        <div className=\"movie__runtime\">{currentMovieDetail ? currentMovieDetail.runtime + \" mins\" : \"\"}</div>\r\n                        <div className=\"movie__releaseDate\">{currentMovieDetail ? \"Release date: \" + currentMovieDetail.release_date : \"\"}</div>\r\n                        <div className=\"movie__genres\">\r\n                            {\r\n                                currentMovieDetail && currentMovieDetail.genres\r\n                                ? \r\n                                currentMovieDetail.genres.map(genre => (\r\n                                    <><span className=\"movie__genre\" id={genre.id}>{genre.name}</span></>\r\n                                )) \r\n                                : \r\n                                \"\"\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"movie__detailRightBottom\">\r\n                        <div className=\"synopsisText\">Synopsis\r\n                        {console.log(\"favouriteMovies\", favouriteMovies)}\r\n                        {console.log(\"currentMovieDetail\",  currentMovieDetail)}\r\n                        {console.log(\"Checksldlfahsfha\",favouriteMovies[1]===currentMovieDetail)}\r\n                        {\r\n                            \r\n                        }\r\n                        {\r\n                            showFavourite\r\n                            ?\r\n                            <span className=\"favourite\" onClick={() => {dispatch(removeFavourite(currentMovieDetail)); setShowFavourite(false)}}>Favourite<i class=\"newTab favouriteOne fas fa-heart\"></i></span>\r\n                            :\r\n                            <span className=\"favourite\" onClick={() => {dispatch(setFavourite(currentMovieDetail)); setShowFavourite(true)}}>Add to favourite<i class=\"newTab nonFavourite far fa-heart\"></i></span>\r\n                        }\r\n                        </div>\r\n                        <div>{currentMovieDetail ? currentMovieDetail.overview : \"\"}</div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"movie__links\">\r\n                <div className=\"movie__heading\">Useful Links</div>\r\n                {\r\n                    currentMovieDetail && <a><p><span className=\"movie__previewButton movie__Button\" onClick={() => setShowHslPlayer(!showHslPlayer)}>Preview video{showHslPlayer ? <i class=\"newTab far fa-eye\" /> : <i class=\"newTab far fa-eye-slash\"></i>}</span></p></a>\r\n                }\r\n                {\r\n                    currentMovieDetail && currentMovieDetail.homepage && <a href={currentMovieDetail.homepage} target=\"_blank\" style={{textDecoration: \"none\"}}><p><span className=\"movie__homeButton movie__Button\">Homepage <i className=\"newTab fas fa-external-link-alt\"></i></span></p></a>\r\n                }\r\n                {\r\n                    currentMovieDetail && currentMovieDetail.imdb_id && <a href={\"https://www.imdb.com/title/\" + currentMovieDetail.imdb_id} target=\"_blank\" style={{textDecoration: \"none\"}}><p><span className=\"movie__imdbButton movie__Button\">IMDb<i className=\"newTab fas fa-external-link-alt\"></i></span></p></a>\r\n                }\r\n            </div>\r\n            {\r\n                showHslPlayer\r\n                && \r\n                <>\r\n                    <div className=\"movie__heading\">Movie preview video </div>\r\n                    <div className=\"movie__hlsPlayer\">\r\n                        <ReactHlsPlayer\r\n                            src=\"https://content.jwplatform.com/manifests/yp34SRmf.m3u8\"\r\n                            autoPlay={true}\r\n                            controls={true}\r\n                            width=\"75%\"\r\n                        />\r\n                    </div>\r\n                </>\r\n            }\r\n            <div className=\"movie__heading\">Production companies</div>\r\n            <div className=\"movie__production\">\r\n                {\r\n                    currentMovieDetail && currentMovieDetail.production_companies && currentMovieDetail.production_companies.map(company => (\r\n                        <>\r\n                            {\r\n                                company.logo_path \r\n                                && \r\n                                <span className=\"productionCompanyImage\">\r\n                                    <img className=\"movie__productionComapany\" src={\"https://image.tmdb.org/t/p/original\" + company.logo_path} />\r\n                                    <span>{company.name}</span>\r\n                                </span>\r\n                            }\r\n                        </>\r\n                        \r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Movie;","export const setFavourite = (payload) => ({\r\n    type: \"SET_FAVOURITE\",\r\n    payload: payload\r\n})\r\n\r\nexport const removeFavourite = (payload) => ({\r\n    type: \"REMOVE_FAVOURITE\",\r\n    payload: payload\r\n})\r\n\r\nexport const setCurrentMovieDetail = (payload) => ({\r\n    type: \"SET_CURRENT_MOVIE_DETAIL\",\r\n    payload: payload\r\n})\r\n\r\nexport const getPopularMovies = () => ({\r\n    type: \"GET_POPULAR_MOVIES\"\r\n})\r\n\r\nexport const getTopRatedMovies = () => ({\r\n    type: \"GET_TOP_RATED_MOVIES\"\r\n})\r\n\r\nexport const getUpComingMovies = () => ({\r\n    type: \"GET_UPCOMING_MOVIES\"\r\n})","import React, { useEffect, useState } from 'react'\r\nimport Skeleton, { SkeletonTheme }  from \"react-loading-skeleton\";\r\nimport \"./cards.css\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst Cards = ({movie}) => {\r\n\r\n    const [ isLoading, setIsLoading] = useState(true)\r\n    const favouriteMovies = useSelector(state => state.favouriteMovies)\r\n    \r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        },1500)\r\n    },[movie.poster_path])\r\n\r\n    return <>\r\n        {\r\n            isLoading\r\n            ?\r\n            <div className=\"cards\">\r\n                <SkeletonTheme color=\"#202020\" highlightColor=\"#444\">\r\n                    <Skeleton height={300} duration={2} />\r\n                </SkeletonTheme>\r\n            </div>\r\n            :\r\n            <div className=\"cards\" onClick={() => window.location = window.location.origin + `/movie/${movie.id}`}>\r\n                {\r\n                    favouriteMovies.map(favMovie => {\r\n                        if(favMovie.id === movie.id){\r\n                            return<span class=\"favourite__indicator\"><i className=\"newTab favouriteOne fas fa-heart\" /></span>\r\n                        }\r\n                    })\r\n                }  \r\n                <img className=\"cards__img\" src={`https://image.tmdb.org/t/p/original${movie ? movie.poster_path : \"\"}`} />     \r\n                <div className=\"cards__overlay\">\r\n                    <div class=\"card__title\">{movie ? movie.original_title : \"\"}</div>\r\n                    <div class=\"card__runtime\">{movie ? movie.release_date : \"\"}<span className=\"card__rating\">{movie ? movie.vote_average : \"\"} <i class=\"fas fa-star\" />{\"  \"}</span></div>\r\n                    <div class=\"card__description\">{movie ? movie.overview.slice(0,118) + \"...\": \"\"}</div>\r\n                </div >\r\n            </div>\r\n        }\r\n    </>\r\n};\r\n\r\nexport default Cards;","import React, { useEffect } from 'react'\r\nimport \"./movieListPage.css\"\r\nimport Card from \"../../components/cards/cards\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getPopularMovies } from \"../../redux/action\"\r\n\r\nconst PopularMovieListPage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const popularMovies = useSelector(state => state.popularMovies)\r\n\r\n    useEffect(() => {\r\n        dispatch(getPopularMovies())\r\n    },[])\r\n    \r\n\r\n    return (\r\n        <div className=\"movie_group\">\r\n            <h2 className=\"list_title\">Popular Movies</h2>\r\n            <div className=\"movies_card\">\r\n                {\r\n                    popularMovies.map(movie => <Card movie={movie} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PopularMovieListPage;","import React, {useEffect} from 'react'\r\nimport \"./movieListPage.css\"\r\nimport Card from \"../../components/cards/cards\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {getTopRatedMovies} from \"../../redux/action\"\r\n\r\nconst TopRatedMovieListPage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const topRatedMovies = useSelector(state => state.topRatedMovies)\r\n\r\n    useEffect(() => {\r\n        dispatch(getTopRatedMovies())\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"movie_group\">\r\n            <h2 className=\"list_title\">Top Rated Movies</h2>\r\n            <div className=\"movies_card\">\r\n                {\r\n                    topRatedMovies.map(movie => <Card movie={movie} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TopRatedMovieListPage;","import React, {useEffect} from \"react\"\r\nimport \"./movieListPage.css\"\r\nimport Card from \"../../components/cards/cards\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getUpComingMovies} from \"../../redux/action\"\r\n\r\nconst UpcomingMovieListPage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const upcomingMovies = useSelector(state => state.upcomingMovies)\r\n    \r\n    useEffect(() => {\r\n        dispatch(getUpComingMovies())\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"movie_group\">\r\n            <h2 className=\"list_title\">Upcoming Movies</h2>\r\n            <div className=\"movies_card\">\r\n                {\r\n                    upcomingMovies.map(movie => <Card movie={movie} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpcomingMovieListPage;","import React from 'react'\r\nimport \"./movieListPage.css\"\r\nimport Card from \"../../components/cards/cards\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst MyFavouriteMovieListPage = () => {\r\n\r\n    const favouriteMovies = useSelector(state => state.favouriteMovies)\r\n    \r\n    return (\r\n        <div className=\"movie_group\">\r\n            <h2 className=\"list_title\">My Favourite Movies</h2>\r\n            <div className=\"movies_card\">\r\n                {\r\n                    favouriteMovies.map(movie => <Card movie={movie} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyFavouriteMovieListPage;","import React from 'react'\r\nimport { useParams } from 'react-router'\r\nimport PopularMovieListPage from './popularMovieListPage'\r\nimport TopRatedMovieListPage from './topRatedMovieListPage'\r\nimport UpcomingMovieListPage from './upcomingMoviesListPage'\r\nimport MyFavouriteMovieListPage from './myFavouriteMovieList'\r\n\r\n\r\nconst MovieListPage = () => {\r\n\r\n    const { type } = useParams()\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (type === \"popular\") && <PopularMovieListPage />\r\n            } \r\n            {\r\n                (type === \"top_rated\") && <TopRatedMovieListPage />\r\n            }\r\n            {\r\n                (type === \"upcoming\") && <UpcomingMovieListPage />\r\n            } \r\n            {\r\n                (type === \"my-favourite\") && <MyFavouriteMovieListPage />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MovieListPage;","import React, { useEffect, useState } from 'react'\r\nimport Cards from \"../cards/cards\"\r\nimport \"./movieList.css\"\r\n\r\nconst MovieList = (props) => {\r\n    const type = Object.keys(props)[0]\r\n\r\n    const [movieList, setMovieList] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch(`https://api.themoviedb.org/3/movie/${type}?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`)\r\n        .then(response => response.json())\r\n        .then(data => setMovieList(data.results))\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"movie__group\">\r\n            <h2 className=\"list__title\">{type===\"top_rated\" ? \"TOP RATED\" : type.toUpperCase()}</h2>\r\n            <div className=\"movie__list\">\r\n                {\r\n                    movieList && movieList.map(movie => <Cards movie={movie} />)\r\n                }\r\n                {/* <Cards /><Cards /><Cards /><Cards /><Cards /><Cards /><Cards /> */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieList;","import React from 'react'\r\nimport MovieList from \"../../components/movieList/movieList\"\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <MovieList popular />\r\n            <MovieList top_rated />\r\n            <MovieList upcoming />  \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\nimport './App.css'\n// import Cards from \"./components/cards/cards\"\nimport Header from \"./components/header/Header\"\nimport MovieDetail from \"./pages/movieDetail/movie\"\nimport MovieListPage from \"./pages/movieListPage/movieListPage\"\nimport Home from \"./pages/home/home\"\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            <Router>\n                <Header />\n                 <Switch>\n                <Route exact path=\"/TvMovie/\"><Home /></Route>\n                <Route path=\"/TvMovie/movie/:id\"><MovieDetail /></Route>\n                <Route path=\"/TvMovie/movies/:type\"><MovieListPage /></Route>\n                <Route path=\"/TvMovie/:anything\"><Redirect to=\"/\"></Redirect></Route>\n                </Switch> \n            </Router>\n        </div>\n    )\n}\n\nexport default App;\n","const initialState = {\r\n    favouriteMovies: [],\r\n    popularMovies: [],\r\n    topRatedMovies: [],\r\n    upcomingMovies: [],\r\n    currentMovieDetail: {}\r\n}\r\n\r\nconst reducer =  (state=initialState, action) => {\r\n    switch(action.type){\r\n        case \"SET_FAVOURITE_ASYNC\":\r\n            return {\r\n                ...state,\r\n                favouriteMovies: [ ...state.favouriteMovies, action.payload.payload ]\r\n            }\r\n        case \"REMOVE_FAVOURITE_ASYNC\":\r\n            return {\r\n                ...state,\r\n                favouriteMovies: state.favouriteMovies.filter(movie => movie != action.payload.payload)\r\n            }\r\n        case \"GET_POPULAR_MOVIES_ASYNC\":\r\n            return {\r\n                ...state,\r\n                popularMovies: [...action.payload]\r\n            }\r\n        case \"GET_TOP_RATED_MOVIES_ASYNC\":\r\n            return {\r\n                ...state,\r\n                topRatedMovies: [...action.payload]\r\n            }\r\n        case \"GET_UPCOMING_MOVIES_ASYNC\":\r\n            return {\r\n                ...state,\r\n                upcomingMovies: [...action.payload]\r\n            }\r\n        case \"SET_CURRENT_MOVIE_DETAIL_ASYNC\":\r\n            return {\r\n                ...state,\r\n                currentMovieDetail: { ...action.payload }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer","import { takeLatest, put, all } from \"redux-saga/effects\"\r\n\r\n\r\n\r\n// SET FAVOURITE\r\nfunction* setFavouriteAsync(payload) {\r\n    yield put({ type: \"SET_FAVOURITE_ASYNC\", payload: payload})\r\n}\r\nfunction* watchSetFavouriteMovie() {\r\n    yield takeLatest(\"SET_FAVOURITE\", setFavouriteAsync)\r\n}\r\n\r\n// REMOVE FAVOURITE\r\nfunction* removeFavouriteAsync(payload) {\r\n    yield put({ type: \"REMOVE_FAVOURITE_ASYNC\", payload: payload})\r\n}\r\nfunction* watchRemoveFavouriteMovie() {\r\n    yield takeLatest(\"REMOVE_FAVOURITE\", removeFavouriteAsync)\r\n}\r\n\r\n// SET CURRENT MOVIE DETAIL\r\nfunction* setCurrentMovieDetailAsync(payload) {\r\n    const json = yield fetch(`https://api.themoviedb.org/3/movie/${payload.payload}?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`).then(res => res.json())\r\n    yield put({ type: \"SET_CURRENT_MOVIE_DETAIL_ASYNC\", payload: json})\r\n}\r\nfunction* watchSetCurrentMovieDetailAsync() {\r\n    yield takeLatest(\"SET_CURRENT_MOVIE_DETAIL\", setCurrentMovieDetailAsync)\r\n}\r\n\r\n// GET POPULAR MOVIES\r\nfunction* getPopularMoviesAsync() {\r\n    const json = yield fetch(\"https://api.themoviedb.org/3/movie/popular?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US\").then(res => res.json())\r\n    yield put({ type: \"GET_POPULAR_MOVIES_ASYNC\", payload: json.results})\r\n}\r\nfunction* watchGetPopularMovies() {\r\n    yield takeLatest(\"GET_POPULAR_MOVIES\", getPopularMoviesAsync)\r\n}\r\n\r\n// GET TOP RATED MOVIES\r\nfunction* getTopRatedMoviesAsync() {\r\n    const json = yield fetch(\"https://api.themoviedb.org/3/movie/top_rated?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US\").then(res => res.json())\r\n    yield put({ type: \"GET_TOP_RATED_MOVIES_ASYNC\", payload: json.results})\r\n}\r\nfunction* watchGetTopRatedMovies() {\r\n    yield takeLatest(\"GET_TOP_RATED_MOVIES\", getTopRatedMoviesAsync)\r\n}\r\n\r\n// GET UPCOMING MOVIES\r\nfunction* getUpComingMoviesAsync() {\r\n    const json = yield fetch(\"https://api.themoviedb.org/3/movie/upcoming?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US\").then(res => res.json())\r\n    yield put({ type: \"GET_UPCOMING_MOVIES_ASYNC\", payload: json.results})\r\n}\r\nfunction* watchGetUpComingMovies() {\r\n    yield takeLatest(\"GET_UPCOMING_MOVIES\", getUpComingMoviesAsync)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// FINAL EXPORT ALL\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchSetFavouriteMovie(), \r\n        watchRemoveFavouriteMovie(),\r\n        watchGetPopularMovies(), \r\n        watchGetTopRatedMovies(), \r\n        watchGetUpComingMovies(),\r\n        watchSetCurrentMovieDetailAsync()\r\n    ])\r\n}","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducer from \"./reducer\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { logger } from \"redux-logger\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./saga\"\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n// const middlewares = [logger, sagaMiddleware];\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\n\r\nconst store = createStore(\r\n  persistedReducer,\r\n  composeEnhancers(applyMiddleware(logger, sagaMiddleware))\r\n);\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport store from \"./redux/store\"\nimport { Provider } from \"react-redux\"\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>, \n    document.getElementById('root')\n)\n"],"sourceRoot":""}